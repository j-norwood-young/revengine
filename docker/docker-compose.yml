version: '3.6'
services:
  api:
    image: jasony/revengine-api
    build:
      context: ../.
      dockerfile: ./docker/api/Dockerfile
      no_cache: true
    restart: always
    stdin_open: true
    tty: true
    ports:
      - 4001:4001
    env_file:
      - ../.env-prod
    environment:
      - NODE_ENV=production
      - PORT=4001
    extra_hosts:
      - "rfvengine1:10.0.1.3"
      - "rfvengine2:10.0.1.4"
      - "rfvengine3:10.0.1.5"
      - "rfvengine4:10.0.1.6"
    volumes:
      - ../packages/api:/usr/src/app/packages/api
    deploy:
      mode: replicated
      replicas: 1
      update_config:
        parallelism: 1
        delay: 60s
        order: start-first
    healthcheck:
      test: ["CMD-SHELL", "curl -sf http://localhost:4001/api/test | grep -q '\"count\".*\"data\"'"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
  frontend:
    image: jasony/revengine-frontend
    build:
      context: ../.
      dockerfile: ./docker/frontend/Dockerfile
      no_cache: true
    restart: always
    stdin_open: true
    tty: true
    # networks:
    #   - redis_network
    #   - default
    ports:
      - 4014:4014
    env_file:
      - ../.env-prod
    environment:
      - NODE_ENV=production
      - PORT=4014
      - REDIS_URL=redis://redis1:6379
      - REDIS_HOST=redis1
      - REDIS_PORT=6379
    depends_on:
      - api
      - redis1
    deploy:
      mode: replicated
      replicas: 1
      update_config:
        parallelism: 1
        delay: 60s
        order: start-first
    volumes:
      - ../packages/frontend:/usr/src/app/packages/frontend
      - ../packages/common:/usr/src/app/packages/common
      - ../packages/rfv:/usr/src/app/packages/rfv
    healthcheck:
      test: ["CMD-SHELL", "curl -sf http://localhost:4014/ | grep -q '<title>Login</title>'"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
  tracker:
    image: jasony/revengine-tracker
    build:
      context: ../.
      dockerfile: ./docker/tracker/Dockerfile
    volumes:
      - ../packages/tracker:/usr/src/app/packages/tracker
      - ../packages/common:/usr/src/app/packages/common
    restart: always
    stdin_open: true
    tty: true
    networks:
      - kafka_network
      - redis_network
      - default
    ports:
      - 4003:80
    env_file:
      - ../.env-prod
    environment:
      - NODE_ENV=production
      - MMDB_FILE=/usr/lib/mmdb/dbip-city-lite-2025-02.mmdb
      - REDIS_URL=redis://redis1:6379
      - PORT=80
      - TRACKER_HOST=0.0.0.0
      - REDIS_HOST=redis1
      - REDIS_PORT=6379
      - QUEUE_NAME=tracker
      - NODE_ENV=production
      - INDEX=pageviews_copy
      - TRACKER_NAME=Pageviews
      - KAFKA_SERVER=kafka1:9092
      - KAFKA_TOPIC=Pageviews_events_1
      - KAFKA_GROUP=Pageviews_group
      - KAFKA_TOPIC_2=Pageviews_events_2
      - KAFKA_GROUP_2=Pageviews_group_2
    depends_on:
      - api
      - redis1
    deploy:
      mode: replicated
      replicas: 1
      update_config:
        parallelism: 1
        delay: 60s
        order: start-first
    healthcheck:
      test: ["CMD-SHELL", "curl -sf http://localhost:80/ping | grep -q 'pong'"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    mem_limit: 3g
  consolidator:
    image: jasony/revengine-consolidator
    build:
      context: ../.
      dockerfile: ./docker/consolidator/Dockerfile
    restart: always
    stdin_open: true
    tty: true
    networks:
      - kafka_network
      - default
    env_file:
      - ../.env-prod
    environment:
      - NODE_ENV=production
      - KAFKA_SERVER=kafka1:9092
      - REDIS_URL=redis://redis1:6379
      - KAFKA_SERVER=kafka1:9092
      - INDEX=pageviews_copy
    depends_on:
      - api
      - kafka1
    volumes:
      - ../packages/consolidator:/usr/src/app/packages/consolidator
      - ../packages/common:/usr/src/app/packages/common
    # deploy:
    #   mode: global
    healthcheck:
      test: ["CMD-SHELL", "ps aux | grep -v grep | grep -q 'node.*consolidator' && netstat -an | grep -q ':9092.*ESTABLISHED' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
  crossword_tracker:
    image: jasony/revengine-crossword-tracker
    build:
      context: ../.
      dockerfile: ./docker/crossword-tracker/Dockerfile
    restart: always
    stdin_open: true
    tty: true
    networks:
      - redis_network
      - default
    ports:
      - 4015:4015
    volumes:
      - ../packages/tracker:/usr/src/app/packages/tracker
      - ../packages/common:/usr/src/app/packages/common
    env_file:
      - ../.env-prod
    environment:
      - PORT=4015
      - NODE_ENV=production
      - MMDB_FILE=/usr/lib/mmdb/dbip-city-lite-2024-02.mmdb
      - REDIS_URL=redis://redis1:6379
      - TRACKER_HOST=0.0.0.0
      - REDIS_HOST=redis1
      - REDIS_PORT=6379
      - QUEUE_NAME=crossword_tracker
      - TRACKER_NAME=crosswords
      - INDEX=crosswords
    depends_on:
      - redis1
    deploy:
      mode: replicated
      replicas: 1
      update_config:
        parallelism: 1
        delay: 60s
        order: start-first
    healthcheck:
      test: ["CMD-SHELL", "curl -sf http://localhost:4015/ping | grep -q 'pong'"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    mem_limit: 3g
  mavio_tracker:
    image: jasony/revengine-mavio-tracker
    build:
      context: ../.
      dockerfile: ./docker/mavio-tracker/Dockerfile
    restart: always
    stdin_open: true
    tty: true
    networks:
      - redis_network
      - default
    ports:
      - 4016:4016
    volumes:
      - ../packages/tracker:/usr/src/app/packages/tracker
      - ../packages/common:/usr/src/app/packages/common
    env_file:
      - ../.env-prod
    environment:
      - PORT=4016
      - NODE_ENV=production
      - MMDB_FILE=/usr/lib/mmdb/dbip-city-lite-2024-02.mmdb
      - REDIS_URL=redis://redis1:6379
      - TRACKER_HOST=0.0.0.0
      - TRACKER_NAME=mavio
      - INDEX=mavio
      - QUEUE_NAME=mavio_tracker
      - NODE_ENV=production
      - REDIS_HOST=redis1
      - REDIS_PORT=6379
      - KAFKA_SERVER=kafka1:9092
      - KAFKA_TOPIC=mavio_tracker
      - KAFKA_GROUP=mavio_tracker
      - KAFKA_TOPIC_2=mavio_tracker_2
      - KAFKA_GROUP_2=mavio_tracker_2
    depends_on:
      - redis1
    deploy:
      mode: replicated
      replicas: 1
      update_config:
        parallelism: 1
        delay: 60s
        order: start-first
    healthcheck:
      test: ["CMD-SHELL", "curl -sf http://localhost:4016/ping | grep -q 'pong'"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    mem_limit: 3g
  listeners:
    image: jasony/revengine-listeners
    build:
      context: ../.
      dockerfile: ./docker/listeners/Dockerfile
    environment:
      - REDIS_URL=redis://redis1:6379
      - NODE_ENV=production
    restart: always
    stdin_open: true
    tty: true
    networks:
      - redis_network
      - default
    env_file:
      - ../.env-prod
    ports:
      - 4020:4020
      - 4021:4021
    depends_on:
      - api
      - kafka1
      - redis1
    deploy:
      mode: replicated
      replicas: 1
      update_config:
        parallelism: 1
        delay: 60s
        order: start-first
    volumes:
      - ../packages/listeners:/usr/src/app/packages/listeners
      - ../packages/common:/usr/src/app/packages/common
      - ../packages/mailer:/usr/src/app/packages/mailer
    healthcheck:
      test: ["CMD-SHELL", "curl -sf http://localhost:4020/test | grep -q '\"status\":\"ok\"'"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
  wordpress_api:
    image: jasony/revengine-wordpress-api
    build:
      context: ../.
      dockerfile: ./docker/wordpress-api/Dockerfile
    environment:
      # - REDIS_URL=redis://redis1:6379
      - NODE_ENV=production
      - PORT=4030
    volumes:
      - ../packages/wordpress_api:/usr/src/app/packages/wordpress_api
      - ../packages/reports:/usr/src/app/packages/reports
    restart: always
    stdin_open: true
    tty: true
    networks:
      - redis_network
      - default
    env_file:
      - ../.env-prod
    ports:
      - 4030:4030
    depends_on:
      - api
      - redis1
    deploy:
      mode: replicated
      replicas: 1
      update_config:
        parallelism: 1
        delay: 60s
        order: start-first
    healthcheck:
      test: ["CMD-SHELL", "curl -sf http://localhost:4030/top_articles | grep -q '\"post_id\"'"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.4
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    networks:
      - default
    restart: always
    volumes:
      - zookeeper-data:/var/lib/zookeeper
    healthcheck:
      test: nc -z localhost 2181 || exit -1
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    # deploy:
    #   mode: global
  kafka1:
    image: confluentinc/cp-kafka:7.4.4
    hostname: kafka1
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG4J_ROOT_LOGLEVEL: WARN
      KAFKA_LOG4J_LOGGERS: org.apache.zookeeper=ERROR,org.apache.kafka=ERROR,kafka=ERROR,kafka.cluster=ERROR,kafka.controller=ERROR,kafka.coordinator=ERROR,kafka.log=ERROR,kafka.server=ERROR,kafka.zookeeper=ERROR,state.change.logger=ERROR,kafka.request.logger=ERROR
    networks:
    #   - external
      - default
    restart: always
    volumes:
      - kafka-data:/var/lib/kafka/data
    # deploy:
    #   mode: global
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics --bootstrap-server localhost:9092 --list || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
  redis1:
    image: redis:alpine
    restart: always
    ports:
      - "6379:6379"
    # deploy:
    #   mode: global
    networks:
      - redis_network
      - default
    volumes:
      - redis-data:/data
    healthcheck:
      test: redis-cli ping
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
  bqsync:
    image: bqsync
    build:
      context: ../.
      dockerfile: ./docker/bqsync/Dockerfile
    restart: on-failure
    environment:
      - GOOGLE_PROJECT_ID=revengine
      - GOOGLE_APPLICATION_CREDENTIALS=/root/.config/gcloud/application_default_credentials.json
    volumes:
      - ./bqsync/application_default_credentials.json:/root/.config/gcloud/application_default_credentials.json
      - ../root/data:/root/data
    extra_hosts:
      - "rfvengine1:10.0.1.3"
      - "rfvengine2:10.0.1.4"
      - "rfvengine3:10.0.1.5"
      - "rfvengine4:10.0.1.6"
networks:
  # kafka_network:
  #   name: kafka-swarm
  #   driver: overlay
  #   # external: true
  # redis_network:
  #   name: redis-swarm
  #   driver: overlay
  #   # external: true
  kafka_network:
    name: kafka-external
    external: true
  redis_network:
    name: redis-external
    external: true
volumes:
  kafka-data:
    driver: local
  redis-data:
    driver: local
  zookeeper-data:
    driver: local
