extends ../layout

block content
    -
        let labels = [];
        for (label of reader.labels) {
            labels.push(`<strong>${label.name}</strong>`);
        }
        if (labels.length > 1) {
            labels[labels.length-1] = `and a ${labels[labels.length-1]}`
        }
    .container
        h1= `${reader.display_name}`
        if (reader.woocommerce_subscription)
            .card-columns
                .card
                    img.card-img-top.bg-light.p-3(src="https://www.touchbasepro.com/Content/Images/TouchBasePro_Logo.svg" alt="Touchbase Pro")
                    .card-body
                        h4.card-title Touchbase Pro
                        p.card-text
                            strong Name 
                            | #{ reader.touchbase_subscriber.name }
                        p.card-text
                            strong State 
                            | #{ reader.touchbase_subscriber.state }
                        p.card-text
                            strong Email Client 
                            | #{ reader.touchbase_subscriber.email_client }
                        each data in reader.touchbase_subscriber.data
                            p.card-text
                                strong #{ data.Key } 
                                | #{ data.Value }

                .card
                    img.card-img-top.bg-light.p-3(src="https://upload.wikimedia.org/wikipedia/commons/2/2a/WooCommerce_logo.svg" alt="WooCommerce")
                    .card-body
                        h4.card-title WooCommerce Subscription
                        p.card-text 
                            strong Status 
                            | #{ reader.woocommerce_subscription.status }
                        if (reader.woocommerce_subscription.customer_note)
                            p.card-text 
                                strong Customer Note 
                                | #{ reader.woocommerce_subscription.customer_note }
                        p.card-text 
                            strong Total Value 
                            | #{ reader.woocommerce_subscription.total }
                        p.card-text 
                            strong Billing Interval 
                            | #{ reader.woocommerce_subscription.billing_interval } #{ reader.woocommerce_subscription.billing_period }
                        if schedule_next_payment
                            p.card-text 
                                strong Schedule Next Payment 
                                | #{ reader.woocommerce_subscription.schedule_next_payment }
                        p.card-text 
                            strong Date Created 
                            | #{ reader.woocommerce_subscription.date_created }
                        p.card-text 
                            strong Date Modified 
                            | #{ reader.woocommerce_subscription.date_modified }
                        if (reader.woocommerce_subscription.payment_method)
                            p.card-text 
                                strong Payment Method 
                                | #{ reader.woocommerce_subscription.payment_method }
                        if (reader.woocommerce_subscription.products.length)
                            each product in reader.woocommerce_subscription.products
                                p.card-text 
                                    strong Product 
                                    | #{ product.name } x #{ product.quantity } = #{ product.total }
        .row
            .col-sm-7
                p
                    - if (labels.length)
                        != `${ reader.display_name } is a ${ labels.join(", ") }.`
                p
                    - if (reader.newsletters.length)
                        != `${ reader.display_name } subscribes to <strong>${ reader.newsletters.length }</strong> newsletter${ reader.newsletters.length > 1 ? "s" : "" }.`
                p
                    - if (reader.visit_count)
                        != `${ reader.display_name } has visited Daily Maverick's site <strong>${ reader.visit_count }</strong> time${ reader.visit_count > 1 ? "s" : "" }.`
                p
                    - if (reader.membership_product)
                        != `They have an <strong>${reader.membership_status} ${reader.membership_product}</strong> subscription. This  subscription is worth <strong>ZAR${ reader.membership_value }</strong> per <strong>${ reader.membership_period }</strong>.`
                p
                    - if (reader.browser)
                        != `${ reader.first_name } uses <strong>${ reader.browser }</strong> on <strong>${ reader.operating_system }</strong> on a <strong>${ reader.device.toLowerCase() }</strong> set to ${ reader.width }x${ reader.height }px. `
                    - if (reader.email_client)
                        != `They use <strong>${ reader.email_client }</strong> to read email.`
                canvas#beamTimespentAvg.histogram
                canvas#beamArticleProgress.histogram
            .col-sm-3
                img.img-fluid(src=`https://www.gravatar.com/avatar/${reader.email_hash}?s=200`)
                .card.mt-2
                    .card-body
                        h2 Newsletters
                        for newsletter in reader.newsletters
                            .custom-control.custom-checkbox
                                input.custom-control-input.list-checkbox-filter(type="checkbox" id=`newsletter-${newsletter}` value=newsletter checked="checked" readonly="readonly")
                                label.custom-control-label(for=`newsletter-${newsletter}`)= newsletter
        
        #activitiesD3.mb-4
        pre= JSON.stringify(activities, null, "\t")
        pre= JSON.stringify(reader, null, "\t")
    script.
        const activities_d3 = new ActivitiesD3("#{reader._id}");
        document.addEventListener("DOMContentLoaded", async (event) => {
            const beam = new Beam();
            let beamdata = await beam.getReader("#{reader._id}");
            const charts = new Charts();
            beam.drawCharts(beamdata);
        })
        